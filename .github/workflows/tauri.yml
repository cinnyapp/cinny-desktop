name: "Publish Tauri App"
on:
  release:
    types: [published]

jobs:
  # Windows-x86_64
  windows-x86_64:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
        with: 
          submodules: true
      - name: Setup node
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 20.12.2
          cache: 'npm'
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install cinny dependencies
        run: cd cinny && npm ci
      - name: Install tauri dependencies
        run: npm ci
      - name: Build desktop app with Tauri
        uses: tauri-apps/tauri-action@v0.5.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          NODE_OPTIONS: "--max_old_space_size=4096"
        with:
          releaseId: ${{ github.event.release.upload_url }}
      - name: Get app version (windows)
        run: |
          $json = (Get-Content "src-tauri\tauri.conf.json" -Raw) | ConvertFrom-Json
          $version = $json.package.version
          echo "Version: ${version}"
          echo "TAURI_VERSION=${version}" >> $Env:GITHUB_ENV
          echo "${Env:TAURI_VERSION}"
        shell: pwsh
      - name: Move msi
        run: Move-Item "src-tauri\target\release\bundle\msi\Cinny_${{ env.TAURI_VERSION }}_x64_en-US.msi" "src-tauri\target\release\bundle\msi\Cinny_desktop-x86_64.msi"
        shell: pwsh
      - name: Move msi.zip
        run: Move-Item "src-tauri\target\release\bundle\msi\Cinny_${{ env.TAURI_VERSION }}_x64_en-US.msi.zip" "src-tauri\target\release\bundle\msi\Cinny_desktop-x86_64.msi.zip"
        shell: pwsh
      - name: Move msi.zip.sig
        run: Move-Item "src-tauri\target\release\bundle\msi\Cinny_${{ env.TAURI_VERSION }}_x64_en-US.msi.zip.sig" "src-tauri\target\release\bundle\msi\Cinny_desktop-x86_64.msi.zip.sig"
        shell: pwsh
      - name: Upload tagged release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191
        with:
          files: |
            src-tauri/target/release/bundle/msi/Cinny_desktop-x86_64.msi
            src-tauri/target/release/bundle/msi/Cinny_desktop-x86_64.msi.zip
            src-tauri/target/release/bundle/msi/Cinny_desktop-x86_64.msi.zip.sig

  # Linux-x86_64
  linux-x86_64:
    # ubuntu-latest 22.04 is too recent for Rust apps.
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
        with: 
          submodules: true
      - name: Setup node
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 20.12.2
          cache: 'npm'
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: Install cinny dependencies
        run: cd cinny && npm ci
      - name: Install tauri dependencies
        run: npm ci
      - name: Build desktop app with Tauri
        uses: tauri-apps/tauri-action@v0.5.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          NODE_OPTIONS: "--max_old_space_size=4096"
        with:
          releaseId: ${{ github.event.release.upload_url }}
      - name: Get app version
        id: vars
        run: echo "tag=$(jq .package.version src-tauri/tauri.conf.json | tr -d '"')" >> $GITHUB_OUTPUT
      - name: Move deb
        run: mv "src-tauri/target/release/bundle/deb/cinny_${{ steps.vars.outputs.tag }}_amd64.deb" "src-tauri/target/release/bundle/deb/Cinny_desktop-x86_64.deb"
      - name: Move AppImage
        run: mv "src-tauri/target/release/bundle/appimage/cinny_${{ steps.vars.outputs.tag }}_amd64.AppImage" "src-tauri/target/release/bundle/appimage/Cinny_desktop-x86_64.AppImage"
      - name: Move AppImage.tar.gz
        run: mv "src-tauri/target/release/bundle/appimage/cinny_${{ steps.vars.outputs.tag }}_amd64.AppImage.tar.gz" "src-tauri/target/release/bundle/appimage/Cinny_desktop-x86_64.AppImage.tar.gz"
      - name: Move AppImage.tar.gz.sig
        run: mv "src-tauri/target/release/bundle/appimage/cinny_${{ steps.vars.outputs.tag }}_amd64.AppImage.tar.gz.sig" "src-tauri/target/release/bundle/appimage/Cinny_desktop-x86_64.AppImage.tar.gz.sig"
      - name: Upload tagged release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191
        with:
          files: |
            src-tauri/target/release/bundle/deb/Cinny_desktop-x86_64.deb
            src-tauri/target/release/bundle/appimage/Cinny_desktop-x86_64.AppImage
            src-tauri/target/release/bundle/appimage/Cinny_desktop-x86_64.AppImage.tar.gz
            src-tauri/target/release/bundle/appimage/Cinny_desktop-x86_64.AppImage.tar.gz.sig

  # macos-universal
  macos-universal:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
        with: 
          submodules: true
      - name: Setup node
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 20.12.2
          cache: 'npm'
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          target: aarch64-apple-darwin,x86_64-apple-darwin
      - name: Install cinny dependencies
        run: cd cinny && npm ci
      - name: Install tauri dependencies
        run: npm ci
      - name: Build desktop app with Tauri
        uses: tauri-apps/tauri-action@v0.5.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          NODE_OPTIONS: "--max_old_space_size=4096"
        with:
          releaseId: ${{ github.event.release.upload_url }}
          args: "--target universal-apple-darwin"
      - name: Get app version
        id: vars
        run: echo "tag=$(jq .package.version src-tauri/tauri.conf.json | tr -d '"')" >> $GITHUB_OUTPUT
      - name: Move dmg
        run: mv "src-tauri/target/universal-apple-darwin/release/bundle/dmg/Cinny_${{ steps.vars.outputs.tag }}_universal.dmg" "src-tauri/target/universal-apple-darwin/release/bundle/dmg/Cinny_desktop-universal.dmg"
      - name: Move app.tar.gz
        run: mv "src-tauri/target/universal-apple-darwin/release/bundle/macos/Cinny.app.tar.gz" "src-tauri/target/universal-apple-darwin/release/bundle/macos/Cinny_desktop-universal.app.tar.gz"
      - name: Move app.tar.gz.sig
        run: mv "src-tauri/target/universal-apple-darwin/release/bundle/macos/Cinny.app.tar.gz.sig" "src-tauri/target/universal-apple-darwin/release/bundle/macos/Cinny_desktop-universal.app.tar.gz.sig"
      - name: Upload tagged release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191
        with:
          files: |
            src-tauri/target/universal-apple-darwin/release/bundle/dmg/Cinny_desktop-universal.dmg
            src-tauri/target/universal-apple-darwin/release/bundle/macos/Cinny_desktop-universal.app.tar.gz
            src-tauri/target/universal-apple-darwin/release/bundle/macos/Cinny_desktop-universal.app.tar.gz.sig

  # Upload release.json
  release-update:
    if: always()
    needs: [windows-x86_64, linux-x86_64, macos-universal]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
      - name: Install dependencies
        run: npm ci
      - name: Run release.json
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}